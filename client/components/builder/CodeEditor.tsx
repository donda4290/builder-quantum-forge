import React, { useState } from 'react';
import { useBuilder } from '@/contexts/BuilderContext';
import { Button } from '@/components/ui/button';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { ScrollArea } from '@/components/ui/scroll-area';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import {\n  Code,\n  Save,\n  Eye,\n  RotateCcw,\n  Download,\n  Upload,\n  FileCode,\n  Palette,\n  Zap\n} from 'lucide-react';\nimport { Alert, AlertDescription } from '@/components/ui/alert';\n\nexport function CodeEditor() {\n  const { currentPage, updateElement, selectedElement } = useBuilder();\n  const [customHTML, setCustomHTML] = useState(currentPage?.customJS || '');\n  const [customCSS, setCustomCSS] = useState(currentPage?.customCSS || '');\n  const [customJS, setCustomJS] = useState(currentPage?.customJS || '');\n  const [elementHTML, setElementHTML] = useState(selectedElement?.content.html || '');\n  const [activeTab, setActiveTab] = useState('page-css');\n\n  const handleSavePageCode = () => {\n    // In a real implementation, this would update the page in the builder context\n    console.log('Saving page code:', { customHTML, customCSS, customJS });\n  };\n\n  const handleSaveElementCode = () => {\n    if (selectedElement) {\n      updateElement(selectedElement.id, {\n        content: { ...selectedElement.content, html: elementHTML }\n      });\n    }\n  };\n\n  const codeExamples = {\n    css: `/* Custom CSS Examples */\n\n/* Custom button hover effect */\n.custom-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n}\n\n/* Gradient background */\n.hero-section {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n\n/* Custom animation */\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.animate-fade-in {\n  animation: fadeInUp 0.6s ease-out;\n}`,\n    \n    javascript: `/* Custom JavaScript Examples */\n\n// Smooth scrolling for anchor links\ndocument.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\n  anchor.addEventListener('click', function (e) {\n    e.preventDefault();\n    const target = document.querySelector(this.getAttribute('href'));\n    if (target) {\n      target.scrollIntoView({\n        behavior: 'smooth',\n        block: 'start'\n      });\n    }\n  });\n});\n\n// Product quantity selector\nfunction updateQuantity(productId, change) {\n  const quantityEl = document.getElementById('quantity-' + productId);\n  let currentQuantity = parseInt(quantityEl.textContent);\n  const newQuantity = Math.max(1, currentQuantity + change);\n  quantityEl.textContent = newQuantity;\n  updateCartTotal();\n}\n\n// Shopping cart functionality\nfunction addToCart(productId, name, price) {\n  const cart = JSON.parse(localStorage.getItem('cart') || '[]');\n  const existingItem = cart.find(item => item.id === productId);\n  \n  if (existingItem) {\n    existingItem.quantity += 1;\n  } else {\n    cart.push({ id: productId, name, price, quantity: 1 });\n  }\n  \n  localStorage.setItem('cart', JSON.stringify(cart));\n  updateCartDisplay();\n}`,\n\n    html: `<!-- Custom HTML Examples -->\n\n<!-- Advanced product card with custom elements -->\n<div class=\"product-card-advanced\">\n  <div class=\"product-image-container\">\n    <img src=\"/api/placeholder/300/300\" alt=\"Product\" class=\"product-image\">\n    <div class=\"product-overlay\">\n      <button class=\"quick-view-btn\" onclick=\"openQuickView()\">\n        <i class=\"icon-eye\"></i> Quick View\n      </button>\n    </div>\n  </div>\n  <div class=\"product-info\">\n    <h3 class=\"product-title\">Premium Product</h3>\n    <div class=\"product-rating\">\n      <span class=\"stars\">★★★★★</span>\n      <span class=\"rating-count\">(24 reviews)</span>\n    </div>\n    <div class=\"product-price\">\n      <span class=\"current-price\">$299.99</span>\n      <span class=\"original-price\">$399.99</span>\n    </div>\n  </div>\n</div>\n\n<!-- Newsletter signup with validation -->\n<form class=\"newsletter-form\" onsubmit=\"subscribeNewsletter(event)\">\n  <div class=\"form-group\">\n    <input type=\"email\" placeholder=\"Enter your email\" required>\n    <button type=\"submit\" class=\"subscribe-btn\">\n      Subscribe\n    </button>\n  </div>\n  <p class=\"form-disclaimer\">\n    By subscribing, you agree to our privacy policy.\n  </p>\n</form>`\n  };\n\n  return (\n    <div className=\"h-full bg-background\">\n      <div className=\"p-4 border-b\">\n        <h3 className=\"font-semibold mb-2\">Custom Code Editor</h3>\n        <p className=\"text-sm text-muted-foreground\">\n          Add custom HTML, CSS, and JavaScript to enhance your website\n        </p>\n      </div>\n\n      <ScrollArea className=\"flex-1\">\n        <div className=\"p-4\">\n          <Tabs value={activeTab} onValueChange={setActiveTab}>\n            <TabsList className=\"grid w-full grid-cols-4\">\n              <TabsTrigger value=\"page-css\" className=\"text-xs\">\n                <Palette className=\"h-3 w-3 mr-1\" />\n                CSS\n              </TabsTrigger>\n              <TabsTrigger value=\"page-js\" className=\"text-xs\">\n                <Zap className=\"h-3 w-3 mr-1\" />\n                JS\n              </TabsTrigger>\n              <TabsTrigger value=\"element-html\" className=\"text-xs\">\n                <Code className=\"h-3 w-3 mr-1\" />\n                HTML\n              </TabsTrigger>\n              <TabsTrigger value=\"examples\" className=\"text-xs\">\n                <FileCode className=\"h-3 w-3 mr-1\" />\n                Examples\n              </TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"page-css\" className=\"space-y-4\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"text-sm flex items-center\">\n                    <Palette className=\"h-4 w-4 mr-2\" />\n                    Custom CSS\n                  </CardTitle>\n                  <CardDescription>\n                    Add custom styles that will be applied to your entire page\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div>\n                    <Label htmlFor=\"custom-css\">CSS Code</Label>\n                    <Textarea\n                      id=\"custom-css\"\n                      value={customCSS}\n                      onChange={(e) => setCustomCSS(e.target.value)}\n                      placeholder=\"/* Your custom CSS here */\"\n                      className=\"mt-1 font-mono text-sm\"\n                      rows={12}\n                    />\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <Button onClick={handleSavePageCode} size=\"sm\">\n                      <Save className=\"h-4 w-4 mr-2\" />\n                      Apply CSS\n                    </Button>\n                    <Button variant=\"outline\" size=\"sm\">\n                      <Eye className=\"h-4 w-4 mr-2\" />\n                      Preview\n                    </Button>\n                    <Button variant=\"outline\" size=\"sm\">\n                      <RotateCcw className=\"h-4 w-4 mr-2\" />\n                      Reset\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"page-js\" className=\"space-y-4\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"text-sm flex items-center\">\n                    <Zap className=\"h-4 w-4 mr-2\" />\n                    Custom JavaScript\n                  </CardTitle>\n                  <CardDescription>\n                    Add interactive functionality with custom JavaScript\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <Alert>\n                    <AlertDescription>\n                      JavaScript will be executed when the page loads. Be careful with custom code.\n                    </AlertDescription>\n                  </Alert>\n                  <div>\n                    <Label htmlFor=\"custom-js\">JavaScript Code</Label>\n                    <Textarea\n                      id=\"custom-js\"\n                      value={customJS}\n                      onChange={(e) => setCustomJS(e.target.value)}\n                      placeholder=\"// Your custom JavaScript here\"\n                      className=\"mt-1 font-mono text-sm\"\n                      rows={12}\n                    />\n                  </div>\n                  <div className=\"flex space-x-2\">\n                    <Button onClick={handleSavePageCode} size=\"sm\">\n                      <Save className=\"h-4 w-4 mr-2\" />\n                      Apply JS\n                    </Button>\n                    <Button variant=\"outline\" size=\"sm\">\n                      <Eye className=\"h-4 w-4 mr-2\" />\n                      Test\n                    </Button>\n                    <Button variant=\"outline\" size=\"sm\">\n                      <RotateCcw className=\"h-4 w-4 mr-2\" />\n                      Reset\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"element-html\" className=\"space-y-4\">\n              <Card>\n                <CardHeader>\n                  <CardTitle className=\"text-sm flex items-center\">\n                    <Code className=\"h-4 w-4 mr-2\" />\n                    Element HTML\n                  </CardTitle>\n                  <CardDescription>\n                    {selectedElement \n                      ? `Edit custom HTML for the selected ${selectedElement.type} element`\n                      : 'Select an element to edit its custom HTML'\n                    }\n                  </CardDescription>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  {selectedElement ? (\n                    <>\n                      <div>\n                        <Label htmlFor=\"element-html\">Custom HTML</Label>\n                        <Textarea\n                          id=\"element-html\"\n                          value={elementHTML}\n                          onChange={(e) => setElementHTML(e.target.value)}\n                          placeholder=\"<div>Your custom HTML here</div>\"\n                          className=\"mt-1 font-mono text-sm\"\n                          rows={8}\n                        />\n                      </div>\n                      <div className=\"flex space-x-2\">\n                        <Button onClick={handleSaveElementCode} size=\"sm\">\n                          <Save className=\"h-4 w-4 mr-2\" />\n                          Update Element\n                        </Button>\n                        <Button variant=\"outline\" size=\"sm\">\n                          <RotateCcw className=\"h-4 w-4 mr-2\" />\n                          Reset\n                        </Button>\n                      </div>\n                    </>\n                  ) : (\n                    <div className=\"text-center py-8 text-muted-foreground\">\n                      <Code className=\"h-12 w-12 mx-auto mb-4 opacity-50\" />\n                      <p>Select an element on the canvas to edit its HTML</p>\n                    </div>\n                  )}\n                </CardContent>\n              </Card>\n            </TabsContent>\n\n            <TabsContent value=\"examples\" className=\"space-y-4\">\n              <div className=\"space-y-4\">\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-sm\">CSS Examples</CardTitle>\n                    <CardDescription>Copy and customize these CSS snippets</CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <Textarea\n                      value={codeExamples.css}\n                      readOnly\n                      className=\"font-mono text-xs\"\n                      rows={8}\n                    />\n                    <Button variant=\"outline\" size=\"sm\" className=\"mt-2\">\n                      <Copy className=\"h-4 w-4 mr-2\" />\n                      Copy CSS\n                    </Button>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-sm\">JavaScript Examples</CardTitle>\n                    <CardDescription>Interactive functionality snippets</CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <Textarea\n                      value={codeExamples.javascript}\n                      readOnly\n                      className=\"font-mono text-xs\"\n                      rows={8}\n                    />\n                    <Button variant=\"outline\" size=\"sm\" className=\"mt-2\">\n                      <Copy className=\"h-4 w-4 mr-2\" />\n                      Copy JS\n                    </Button>\n                  </CardContent>\n                </Card>\n\n                <Card>\n                  <CardHeader>\n                    <CardTitle className=\"text-sm\">HTML Examples</CardTitle>\n                    <CardDescription>Advanced HTML structures and components</CardDescription>\n                  </CardHeader>\n                  <CardContent>\n                    <Textarea\n                      value={codeExamples.html}\n                      readOnly\n                      className=\"font-mono text-xs\"\n                      rows={8}\n                    />\n                    <Button variant=\"outline\" size=\"sm\" className=\"mt-2\">\n                      <Copy className=\"h-4 w-4 mr-2\" />\n                      Copy HTML\n                    </Button>\n                  </CardContent>\n                </Card>\n              </div>\n            </TabsContent>\n          </Tabs>\n        </div>\n      </ScrollArea>\n    </div>\n  );\n}"}, {"old_str": "import {\n  Code,\n  Save,\n  Eye,\n  RotateCcw,\n  Download,\n  Upload,\n  FileCode,\n  Palette,\n  Zap\n} from 'lucide-react';\nimport { Alert, AlertDescription } from '@/components/ui/alert';", "new_str": "import {\n  Code,\n  Save,\n  Eye,\n  RotateCcw,\n  Download,\n  Upload,\n  FileCode,\n  Palette,\n  Zap,\n  Copy\n} from 'lucide-react';\nimport { Alert, AlertDescription } from '@/components/ui/alert';"}]